1
00:00:00,000 --> 00:00:04,482
Now that we've learned about CSMA/CD, I'm
going to tell you about Ethernet.

2
00:00:04,482 --> 00:00:09,476
Ethernet started in the early 1970s,
originally at around, ten megabits per

3
00:00:09,476 --> 00:00:12,357
second.
But it has evolved a long way since then.

4
00:00:12,357 --> 00:00:17,032
In this first place, CSMA/CD was right at
the heart of how Ethernet worked.

5
00:00:17,032 --> 00:00:20,873
And determined how many hosts would share
a single cable.

6
00:00:20,873 --> 00:00:25,163
We'll see later that it became less
important as the speed went up.

7
00:00:25,163 --> 00:00:30,350
The original Ethernet looked like this.
These are two pictures that were drawn by

8
00:00:30,350 --> 00:00:35,335
Bob Metcalfe, one of the co-inventors of
Ethernet back in the early 70s.  He was

9
00:00:35,335 --> 00:00:39,180
working at Xerox Parc at the time.
He later went on to found 3Com.

10
00:00:39,180 --> 00:00:43,452
So, on the left, it's showing the original
topology that they had in mind of both

11
00:00:43,453 --> 00:00:47,085
wired and wireless Ethernet.
And on the right, shows the specifics of

12
00:00:47,085 --> 00:00:51,304
how the first Ethernet network was built.
There was this big, thick, yellow cable,

13
00:00:51,304 --> 00:00:55,576
it was always yellow, it was very, very
thick and inflexible, and snaked around in

14
00:00:55,576 --> 00:00:58,087
the ceiling, or in the walls, or under the
floor.

15
00:00:58,087 --> 00:01:02,520
And then, these big taps would be screwed
down into the cable to make an electrical

16
00:01:02,520 --> 00:01:04,870
contact for an interface, and then, a
computer.

17
00:01:04,870 --> 00:01:08,870
It became much simpler over time, ending
up with what we use today.

18
00:01:08,870 --> 00:01:13,907
This is the Ethernet frame format.
This is the format of the frames that are

19
00:01:13,907 --> 00:01:17,528
put onto the link.
The first bit is shown on the left-hand

20
00:01:17,528 --> 00:01:22,203
side and it starts with a preamble.
The preamble is a sequence of ones and

21
00:01:22,203 --> 00:01:26,575
zeroes, just there to train the clock
recovery circuits to help them get

22
00:01:26,575 --> 00:01:31,553
started, and to have recovered the clock
before the data actually starts to arrive.

23
00:01:31,553 --> 00:01:36,653
There's a starter frame delimiter which is
a special symbol, which tells us that the

24
00:01:36,653 --> 00:01:40,842
packet is just about to start.
And we then go into the destination

25
00:01:40,842 --> 00:01:44,060
address, which we already know to be a
48-bit address.

26
00:01:44,060 --> 00:01:49,100
This is a globally unique aadress assigned
by the manufacturer of the interface.

27
00:01:49,297 --> 00:01:52,651
One bit tells us whether it's unicast or
multicast.

28
00:01:52,651 --> 00:01:57,912
And one bit can be used, in fact, to make
it a locally defined address although

29
00:01:57,912 --> 00:02:02,252
that's actually very unusual.
So, there's 46 bits that are there to

30
00:02:02,252 --> 00:02:07,382
define the globally unique address.
And so there's a very, very large number

31
00:02:07,382 --> 00:02:12,051
of Ethernet addresses to use.
The source address is just the address of

32
00:02:12,051 --> 00:02:15,931
the local host that's sending the frame,
in the usual sense.

33
00:02:15,931 --> 00:02:19,943
The type indicates what we'll
find inside the data.

34
00:02:20,140 --> 00:02:25,800
For example, the Ether type 0x0800 is
telling us that there's IP inside here

35
00:02:25,800 --> 00:02:30,753
which of course, a very common case.
You'll recall that there is a minimum size

36
00:02:30,753 --> 00:02:35,929
for any CSMA/CD based network, a minimum
packet size, so we pad the packet if the

37
00:02:35,929 --> 00:02:39,379
data is very short.
We pad it to make sure there are

38
00:02:39,379 --> 00:02:44,621
sufficient number
of bytes so that we can detect collisions

39
00:02:44,621 --> 00:02:47,939
reliably before we're finished sending the
packet.

40
00:02:47,939 --> 00:02:53,248
So, they're padded out to a minimum of 46
data bytes, so if the amount of data is

41
00:02:53,248 --> 00:02:58,622
over 46, then, of course, it won't pad it.
But otherwise, it will pad it just to make

42
00:02:58,622 --> 00:03:02,579
sure there's enough.
And finally there's what's called a cyclic

43
00:03:02,579 --> 00:03:05,576
redundancy check,
CRC, or the frame check sequence.

44
00:03:05,576 --> 00:03:10,714
The CRC is checking the sequence using a
code like we saw in the error detection

45
00:03:10,714 --> 00:03:15,362
videos that will tell us whether or
not there was an error in the bits.

46
00:03:15,362 --> 00:03:20,683
For example, if the bits were corrupted on
the wire or in the end host before it

47
00:03:20,683 --> 00:03:23,913
was processed.
The original ten megabits per second

48
00:03:23,913 --> 00:03:29,366
Ethernet was standardized by IEEE.
And goes by the standard of IEEE 802.3.

49
00:03:29,366 --> 00:03:32,702
You'll often hear Ethernet being referred
to as a dot three

50
00:03:32,702 --> 00:03:36,358
network for this reason,
Just as an abbreviation of 802.3.

51
00:03:36,358 --> 00:03:41,490
And this was just the standard's body name
that was used to write the spec that

52
00:03:41,490 --> 00:03:46,238
defined the correct operation of Ethernet.
So, it has really two components.

53
00:03:46,238 --> 00:03:50,664
It has the MAC protocol and the frame
structure that we've just seen.

54
00:03:50,664 --> 00:03:55,540
And then underneath, you have
different options for the physical layer

55
00:03:55,540 --> 00:03:59,232
that could be used.
There was originally what's called

56
00:03:59,232 --> 00:04:04,390
the 10Base-5, which was that big, thick,
yellow cable that I described earlier.

57
00:04:04,581 --> 00:04:07,828
And that went out of fashion quite a long
time ago.

58
00:04:07,828 --> 00:04:13,113
Then, that was replaced by a thin coaxial
cable version that used the coaxial cable

59
00:04:13,113 --> 00:04:16,041
similar to the RF cables we use for, for
TV.

60
00:04:16,232 --> 00:04:21,071
But what really, really transformed
Ethernet was when it started to use this

61
00:04:21,071 --> 00:04:25,274
type of cable here.
This is the RJ45 cable that we're all very

62
00:04:25,274 --> 00:04:28,457
familiar with.
And that was not because of the

63
00:04:28,457 --> 00:04:31,697
connector.
It was because of the type of cable that

64
00:04:31,697 --> 00:04:36,305
it can use, and also the topology of the
network, and we'll see that in a moment.

65
00:04:36,305 --> 00:04:40,853
But basically, it started to run over
voice grade, unshielded twisted pair that

66
00:04:40,853 --> 00:04:43,828
was already present in the walls of many
buildings.

67
00:04:44,003 --> 00:04:48,435
It's called category three telephone
cable, it's fairly low-grade cable that

68
00:04:48,435 --> 00:04:52,167
was used for connecting telephones to the
exchange at a company.

69
00:04:52,167 --> 00:04:56,949
There's also an optical fiber version
called 10Base-F. it was originally used

70
00:04:56,949 --> 00:05:01,557
mostly by the military because they're
harder to tap. there were two optical

71
00:05:01,557 --> 00:05:05,111
fibers and a single cable, one for
each direction.

72
00:05:05,111 --> 00:05:10,987
Ethernet really took off when the 10Base-T
standard came along for running Ethernet

73
00:05:10,987 --> 00:05:14,882
over twisted pair.
So, ten megabits per second was carried

74
00:05:14,882 --> 00:05:20,690
over category three twisted pair telephone
wires that already existed in pretty much

75
00:05:20,690 --> 00:05:24,585
every building in the world.
They were arranged in a star.

76
00:05:24,585 --> 00:05:29,505
In other words, those, those twisted pair
cables would go to a wiring closet on

77
00:05:29,505 --> 00:05:32,170
their way to the telephone exchange.
So,

78
00:05:32,170 --> 00:05:37,383
Not only did the twisted pair cable really
help Ethernet be successful but this

79
00:05:37,383 --> 00:05:41,879
topology of having an end host connected
by twisted pair into a hub.

80
00:05:41,879 --> 00:05:47,353
And a hub was a repeater, it would take
every single coming in and then repeat it

81
00:05:47,353 --> 00:05:51,720
over every outgoing cable except for the
one through which it entered.

82
00:05:51,720 --> 00:05:55,641
So, it didn't actually understand the
packets, it would merely repeat them

83
00:05:55,641 --> 00:05:58,238
electrically.
If there was a collision, then the

84
00:05:58,238 --> 00:06:02,712
collision would take place anywhere within
here, it would be detected, and the hub

85
00:06:02,712 --> 00:06:07,297
would make sure that the voltage levels
were sufficient to make sure that it could

86
00:06:07,297 --> 00:06:10,645
be detected.
Also, this centralized management

87
00:06:10,841 --> 00:06:15,361
in this hub this would be managed by the
network administrator.

88
00:06:15,361 --> 00:06:20,535
And this central management, rather than
the distributed management of crawling

89
00:06:20,535 --> 00:06:25,906
under the floorboards, or up in
the attic made it much, much

90
00:06:25,906 --> 00:06:31,211
easier to manage Ethernet once these hubs
were placed in these central locations.

91
00:06:31,211 --> 00:06:35,010
So, this led to a huge growth in Ethernet
in the mid-1980s.

92
00:06:35,010 --> 00:06:38,717
Over the years, people wanted to make
Ethernet faster and faster.

93
00:06:38,717 --> 00:06:43,351
So, ten mega bits per second gradually was
increased to a 100 mega bits per second

94
00:06:43,351 --> 00:06:47,000
and then, gigabit per second.
And more recently, ten gigabits per

95
00:06:47,000 --> 00:06:49,781
second.
So, a 1000 times faster than the original

96
00:06:49,781 --> 00:06:52,979
Ethernet spec.
One problem that we have to solve when

97
00:06:52,979 --> 00:06:57,697
increasing the size of Ethernet is, 
if we're using CSMA/CD, then we need to

98
00:06:57,697 --> 00:07:02,833
make sure that we keep this
requirement, that P over R is greater than

99
00:07:02,833 --> 00:07:06,715
or equal to two L over c.
In other words, the duration of a packet,

100
00:07:06,715 --> 00:07:11,314
is longer than the round-trip time so that
we can make sure that we're still

101
00:07:11,314 --> 00:07:14,360
transmitting a packet when a collision is
detected.

102
00:07:14,360 --> 00:07:19,641
So, when we increase
the speed of the network, when we increase

103
00:07:19,641 --> 00:07:24,794
R, in order for this to be true, we either
need to make P larger to counterbalance

104
00:07:24,794 --> 00:07:28,040
that increase in R, or we need to make L
smaller.

105
00:07:28,040 --> 00:07:32,002
And so, this was a design choice when
Ethernet was made faster.

106
00:07:32,002 --> 00:07:35,453
And the solution was to keep the
packet size the same.

107
00:07:35,453 --> 00:07:40,566
Because if we made the packet size ten
times larger from 64 bytes, which was the

108
00:07:40,566 --> 00:07:44,912
original, up to 640 bytes,
Then many of the packets that we'd like to

109
00:07:44,912 --> 00:07:49,322
send would be smaller than that.
Things like acknowledgements and DNS

110
00:07:49,322 --> 00:07:53,221
queries, things like that.
And so, it would be very inefficient.

111
00:07:53,221 --> 00:07:57,120
So, the decision was to keep P the same
but to make L smaller.

112
00:07:57,620 --> 00:08:02,282
So, 100 megabit per second Ethernet and
gigabit per second Ethernet, both have

113
00:08:02,282 --> 00:08:06,338
this both have this requirement that L is
limited to 100 meters.

114
00:08:06,338 --> 00:08:11,243
This turned out to be much easier with the
introduction of Ethernet switching, as

115
00:08:11,243 --> 00:08:15,805
I'll describe in a few minutes.
So, as we made it faster and faster, the

116
00:08:15,805 --> 00:08:21,246
Ethernet MAC protocol stayed the same.
That's the framing structure and the way

117
00:08:21,246 --> 00:08:25,585
in which we decide when to send packets
onto the wire.

118
00:08:25,585 --> 00:08:31,099
That stayed the same for a while.
And the 100 megabit per second Ethernet

119
00:08:31,099 --> 00:08:35,238
was called Fast Ethernet.
It doesn't seem so fast these days.

120
00:08:35,238 --> 00:08:38,825
And there were two standards for the
physical layer.

121
00:08:38,825 --> 00:08:44,343
100Base-TX, which was the coding structure
used for twisted pair cable and then,

122
00:08:44,343 --> 00:08:49,241
100Base-FX for optical fiber.
On the 100Base-TX, it uses category five

123
00:08:49,241 --> 00:08:53,173
cable again, and the same RJ45 connector
that we've seen.

124
00:08:53,380 --> 00:08:58,432
It actually started to be full duplex,
Meaning there were two pairs that were

125
00:08:58,432 --> 00:09:01,148
used, rather than just one within the
cable.

126
00:09:01,337 --> 00:09:06,011
One pair was used for 100 megabits per
second signaling in each direction.

127
00:09:06,200 --> 00:09:11,316
Instead of using the Manchester encoding,
it started to use 4B5B encoding

128
00:09:11,316 --> 00:09:15,737
which we saw as the means to introduce
transitions for clock recovery.

129
00:09:15,737 --> 00:09:19,021
We saw that in the video
about clocks.

130
00:09:19,021 --> 00:09:23,190
And, of course, it was limited to a
distance of a hundred meters.

131
00:09:23,190 --> 00:09:28,188
Then later came along the one gigabit
Ethernet standard.

132
00:09:28,455 --> 00:09:32,740
There was the 1000BASE-T and the
1000BASE-FX,

133
00:09:33,000 --> 00:09:38,319
That should be 1000BASE-T.
The 1000BASE-T standard also runs over

134
00:09:38,319 --> 00:09:44,003
category five cable using the RJ45
connector.  For many of the laptops and

135
00:09:44,003 --> 00:09:48,958
servers that are sold today,
the Ethernet in them is one gigabit per

136
00:09:48,958 --> 00:09:53,230
second or a 1000BASE-T.
It turns out it's very hard carry a one

137
00:09:53,230 --> 00:09:56,477
gigabit per second signal over a category
five cable.

138
00:09:56,477 --> 00:09:59,479
So, they actually use four pairs inside
the cable.

139
00:09:59,479 --> 00:10:04,502
And they carry signals in both directions
at the same time over all four pairs.

140
00:10:04,502 --> 00:10:07,626
So, there's no room for anything else on
this cable.

141
00:10:07,626 --> 00:10:10,383
It can only be used for the gigabit
Ethernet.

142
00:10:10,383 --> 00:10:15,078
It uses a very complex coding which is
beyond the level of what we are going to

143
00:10:15,078 --> 00:10:18,347
be describing in this class and it uses five
level signaling.

144
00:10:18,347 --> 00:10:23,554
So, instead of just using a binary on off
as was used in the original ten megabits

145
00:10:23,554 --> 00:10:27,782
per second Ethernet,
It uses five different levels to try and

146
00:10:27,782 --> 00:10:32,542
pack as much signal, as much information
onto the cable as it, as it can.

147
00:10:32,542 --> 00:10:36,350
And as before, the distance is limited to
100 meters.

148
00:10:36,350 --> 00:10:40,949
By the late 1980s, 10Base-T Ethernet was
extremely popular.

149
00:10:40,949 --> 00:10:46,735
There was already work going on, on 100
megabit per second Ethernet and it was

150
00:10:46,735 --> 00:10:50,592
clear that the networks would get faster
and faster.

151
00:10:50,592 --> 00:10:56,601
The hubs in the repeaters in the wiring
closets meant that the network could be

152
00:10:56,601 --> 00:11:00,830
really quite large and were being deployed
on a very large scale.

153
00:11:00,830 --> 00:11:05,782
But it was clear also that for faster and
faster networks, each of the segments was

154
00:11:05,782 --> 00:11:09,064
going to get very, very short, just down
to a 100 meters.

155
00:11:09,064 --> 00:11:14,017
So, with a large number of hosts sharing a
small network the networks tended to

156
00:11:14,017 --> 00:11:18,374
be overwhelmed with the number of
collisions that they would see, because

157
00:11:18,374 --> 00:11:23,207
there were so many hosts all trying to
talk on the same network and so it became

158
00:11:23,207 --> 00:11:27,802
natural to try and partition those
Ethernet networks to reduce the number of

159
00:11:27,802 --> 00:11:31,920
collisions, what's often referred to as
reducing the collision domain.

160
00:11:31,920 --> 00:11:35,742
At the same time, cost of switching
hardware was coming down.

161
00:11:35,742 --> 00:11:40,648
It became easier to build ASICs, or
specialized chips for doing the, for doing

162
00:11:40,648 --> 00:11:44,089
the switching.
And so, all these things together led to

163
00:11:44,089 --> 00:11:47,020
partitioning networks using Ethernet
switches.

164
00:11:47,020 --> 00:11:51,938
So, with a hub or a repeater, every
time a packet is sent, the whole medium of

165
00:11:51,938 --> 00:11:55,860
all of these five links would become busy,
and would be used up.

166
00:11:55,860 --> 00:12:00,778
So, within this circle here, the entire
capacity is, say, ten megabits per second

167
00:12:00,778 --> 00:12:04,327
or 100 megabits per second depending on the rate.

168
00:12:04,327 --> 00:12:08,871
So, with large networks with, say,
hundreds of end hosts all connected to a

169
00:12:08,871 --> 00:12:12,607
hub or a set of hubs,
This would be very limiting in the total

170
00:12:12,607 --> 00:12:16,716
overall capacity that they had to use.
What if we could allow several

171
00:12:16,716 --> 00:12:19,580
communications to take place at the same
time?

172
00:12:19,580 --> 00:12:24,309
So, for example, if A wants to talk to B
at the same time that C is talking to D.

173
00:12:24,309 --> 00:12:28,799
Because they're talking to
different hosts, different sets of hosts,

174
00:12:28,799 --> 00:12:33,290
Why don't we allow this by allowing the
communications to take place

175
00:12:33,290 --> 00:12:36,283
independently?
So, instead of the hub repeating the

176
00:12:36,283 --> 00:12:40,893
signal just as an electrical signal,
What if it was to actually interpret the

177
00:12:40,893 --> 00:12:43,587
packets,
Send the packets only to the correct

178
00:12:43,587 --> 00:12:48,317
destination, just like a router does,
But based on the Ethernet addresses rather

179
00:12:48,317 --> 00:12:51,790
than the IP addresses.
So, this is what was called a switch.

180
00:12:51,790 --> 00:12:55,192
Before being called Ethernet switches,
they were called bridges.

181
00:12:55,354 --> 00:12:59,188
You will see, see those referred to
sometimes, but we're just going to call

182
00:12:59,188 --> 00:13:03,478
them Ethernet switches.
So, the basic operation is if A is sending

183
00:13:03,478 --> 00:13:05,835
to B, the packet will flow down to the
switch.

184
00:13:05,835 --> 00:13:10,079
The switch will look at the Ethernet
address, to decide where to send it next.

185
00:13:10,079 --> 00:13:12,960
If it has it in its table, then it will
forward it to B.

186
00:13:12,960 --> 00:13:17,308
And at the same time, perhaps C is sending
a packet to D, and the same thing will be

187
00:13:17,308 --> 00:13:20,975
happening over here, independently.
So, the collisions now are just held

188
00:13:20,975 --> 00:13:24,328
within a single cable.
So, if there happen to be signals going in

189
00:13:24,328 --> 00:13:28,257
both directions on the cable at the same
time, that might cause a collision.

190
00:13:28,257 --> 00:13:32,501
Although, at the same time, there was also
introduced something called Full Duplex

191
00:13:32,501 --> 00:13:36,887
Ethernet which was exploiting the fact
that communications could take place on

192
00:13:36,887 --> 00:13:41,288
the cable in both directions without
colliding with each other at the same

193
00:13:41,288 --> 00:13:43,581
time.
And so now, the switch could operate

194
00:13:43,581 --> 00:13:48,664
without the use of CSMA/CD completely once
the switches were introduced and all of

195
00:13:48,664 --> 00:13:52,370
the links were full duplex.
So,

196
00:13:52,370 --> 00:13:57,003
This led to the very first Ethernet
switches being developed in the early

197
00:13:57,003 --> 00:13:59,771
1990s.
And nearly all Ethernet networks

198
00:13:59,771 --> 00:14:04,465
today are based on Ethernet switches.
It's very unusual to see an Ethernet hub

199
00:14:04,465 --> 00:14:07,715
these days.
In fact, for one gigabit per second and

200
00:14:07,715 --> 00:14:12,770
ten gigabit per second Ethernet, there is
no choice all those networks are switched.

201
00:14:12,770 --> 00:14:17,584
So, the advantages are multiple concurrent
communications, full duplex links, they

202
00:14:17,584 --> 00:14:22,699
can send and receive at the same time and
also there is a management benefit, that

203
00:14:22,699 --> 00:14:27,587
if there are dead or faulty end hosts,
they could be isolated by the switch if

204
00:14:27,587 --> 00:14:32,268
you could just switch off the link
and then isolate it from the network

205
00:14:32,268 --> 00:14:37,660
completely to prevent it from harming
any other switches in the network.

206
00:14:39,260 --> 00:14:44,775
So, Ethernet switches have become the 
main way that Ethernet is put into

207
00:14:44,775 --> 00:14:48,515
deployment today.
This is just a picture of an Ethernet switch

208
00:14:48,515 --> 00:14:51,685
at Stanford.
This is the Ethernet switch over here,

209
00:14:51,685 --> 00:14:56,757
with all these cables coming out going
into patch panels here that go off to

210
00:14:56,757 --> 00:15:01,973
different offices in the building.
So, the way that an Ethernet switch works

211
00:15:01,973 --> 00:15:06,269
is it does some very simple operations.
First is that it does forwarding

212
00:15:06,269 --> 00:15:10,566
and learning, we've seen this before.
It forwards packets based on its

213
00:15:10,566 --> 00:15:15,735
forwarding table, and then it learns the
contents of that forwarding table based on

214
00:15:15,735 --> 00:15:19,782
addresses that it's seen.
So, when a frame arrives, first of all, it

215
00:15:19,782 --> 00:15:24,266
examines the header of each arriving frame
to check for the destination

216
00:15:24,266 --> 00:15:27,379
address.
If the Ethernet destination address is in

217
00:15:27,379 --> 00:15:32,112
its forwarding table, it will forward the
frame to the correct outgoing port.

218
00:15:32,112 --> 00:15:34,890
Or if it's multicast,
the set of ports.

219
00:15:34,890 --> 00:15:40,770
If the Ethernet destination address is not
in its table, it will broadcast the frame

220
00:15:40,770 --> 00:15:45,950
to all ports of the switch except the one
through which the frame arrived.

221
00:15:45,950 --> 00:15:50,241
And then, entries in the table are learned
by examining the, the Ethernet source

222
00:15:50,241 --> 00:15:53,846
address of arriving packets.
So, it will take the, the source address,

223
00:15:53,846 --> 00:15:57,394
look it up in the table.
If it finds that it's not there, it will

224
00:15:57,394 --> 00:16:01,629
populate the table with that entry that
says, "Okay if ever I see this as a

225
00:16:01,629 --> 00:16:05,978
destination address, I now know how I
reach it by sending it back out of the

226
00:16:05,978 --> 00:16:10,210
port that this address is connected to."
So, that way, the next time the frame

227
00:16:10,210 --> 00:16:13,990
won't be broadcast, it will just be sent
on to its correct destination.

228
00:16:13,990 --> 00:16:18,309
So, that is the forwarding and learning
function of an Ethernet switch.

229
00:16:18,309 --> 00:16:21,826
And then, there is also the sort of
topology maintenance part.

230
00:16:21,826 --> 00:16:26,392
It runs the spanning tree protocol, where
it exchanges those things called

231
00:16:26,392 --> 00:16:31,144
bridge protocol data units, the BPDU's
that we saw in the spanning tree video.

232
00:16:31,144 --> 00:16:35,895
And it runs the spanning tree protocol to
talk to the other switches to create a

233
00:16:35,895 --> 00:16:39,844
loop free topology.
So, that allows it to decide which ports

234
00:16:39,844 --> 00:16:44,781
to enable or block, to make sure that it
creates a loop free spanning tree among

235
00:16:44,781 --> 00:16:49,525
all of the switches in the network.
As a consequence Ethernet switches are

236
00:16:49,525 --> 00:16:53,365
very, very widely deployed.
And, here's an example of how

237
00:16:53,365 --> 00:16:56,367
that might look in, say, a university
campus.

238
00:16:56,367 --> 00:17:00,766
This is pretty much how our college
networks looks at Stanford.

239
00:17:00,766 --> 00:17:06,211
Inside each building, so this might be a
building or one floor of the building.

240
00:17:06,560 --> 00:17:11,168
This could be the third floor of my
building: the Gates building at

241
00:17:11,167 --> 00:17:14,518
Stanford.
This could be the second floor, there's

242
00:17:14,519 --> 00:17:19,406
another switch for that floor.
And then, they connect into the building

243
00:17:19,406 --> 00:17:22,678
router.
They would often be connected in to

244
00:17:22,678 --> 00:17:28,182
another router in another
building for, fault tolerance in case the,

245
00:17:28,182 --> 00:17:33,958
the building router was to fail.
And this router may be running OSPF for

246
00:17:33,958 --> 00:17:37,511
routing packets across our
campus.

247
00:17:37,511 --> 00:17:43,573
So, these routers form the campus backbone
that spread all across our college campus.

248
00:17:43,573 --> 00:17:49,564
And then they would eventually connect to
a BGP router, that connects to the public

249
00:17:49,564 --> 00:17:53,187
internet.
So, this is speaking the BGP protocol to

250
00:17:53,187 --> 00:17:57,786
the outside world to exchange prefixes for
paths to the outside world.

251
00:17:57,786 --> 00:18:03,150
So, Ethernet switches can connect many,
many hosts, sometimes hundreds of hosts

252
00:18:03,150 --> 00:18:06,982
together.
There are switches available with hundreds

253
00:18:06,982 --> 00:18:10,421
of ports.
They then connect perhaps all the end hosts in

254
00:18:10,421 --> 00:18:12,920
the building, or in the floor of a
building.

255
00:18:12,920 --> 00:18:17,452
So, in summary,
Medium access control protocols come in

256
00:18:17,452 --> 00:18:20,470
two main flavors:
random access and deterministic.

257
00:18:20,470 --> 00:18:24,843
Random access protocols proved very
popular, because they're nice and simple,

258
00:18:24,843 --> 00:18:29,102
they give transmitting hosts a nice,
quick, low delay access to the network

259
00:18:29,102 --> 00:18:33,303
when it's being lightly used.
And over the years, CSMA/CD became the

260
00:18:33,303 --> 00:18:36,295
most popular.
It's a simple access protocol that was

261
00:18:36,295 --> 00:18:39,806
used in the first ten megabit per second
version of Ethernet.

262
00:18:39,806 --> 00:18:43,834
Over the years, the Ethernet standards
emerged for 100 megabits per second

263
00:18:43,834 --> 00:18:48,323
Ethernet, that's called "fast Ethernet."
And then, gigabit per second Ethernet and

264
00:18:48,323 --> 00:18:53,524
more recently ten gigabits per second.
Limits on the link size and the need for

265
00:18:53,524 --> 00:18:59,480
more capacity meant that CSMA/CD was
gradually replaced by Ethernet switching

266
00:18:59,480 --> 00:19:03,965
in which end-hosts typically connect over
a full duplex link.

267
00:19:03,965 --> 00:19:07,641
And so, can both send and receive at the
same time.

268
00:19:07,641 --> 00:19:12,733
And Ethernet switches do pretty much full
routing, like a router does, but

269
00:19:12,733 --> 00:19:16,342
on the Ethernet addresses.
They learn the Ethernet addresses to

270
00:19:16,342 --> 00:19:20,779
populate their tables by learning the
source address of packets that go by.

271
00:19:20,779 --> 00:19:24,388
And that way, they build up a nice, simple
forwarding table.

272
00:19:24,388 --> 00:19:28,825
And then they use the spanning tree
protocol to build a loop free topology

273
00:19:28,825 --> 00:19:31,606
connecting all the switches within the
network.

274
00:19:31,606 --> 00:19:36,221
So, as a consequence, Ethernet switches
are ubiquitous today and used in pretty

275
00:19:36,221 --> 00:19:39,120
much every organization that has a wired
network.

