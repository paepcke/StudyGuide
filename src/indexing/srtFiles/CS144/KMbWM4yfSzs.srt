1
00:00:00,000 --> 00:00:04,464
So in this video I'm going to talk about
retransmission strategies for transport

2
00:00:04,464 --> 00:00:08,488
protocols in order to achieve reliability,
in particular for sliding window

3
00:00:08,488 --> 00:00:12,289
protocols.
The basic question is, we have with some

4
00:00:12,289 --> 00:00:17,506
sliding window or reliable transport,
A window of packets that are in flight.

5
00:00:17,506 --> 00:00:23,065
Say one, two, three, four.
The reason, cumulative acknowledgements and

6
00:00:23,065 --> 00:00:29,463
so all we get is something back such as
ACK 1, ACK 2, ACK 3, ACK 4

7
00:00:29,479 --> 00:00:33,670
It's just the last byte of successfully
received,

8
00:00:33,670 --> 00:00:37,689
The last packet of those successfully
received.

9
00:00:37,690 --> 00:00:42,731
We're maintaining our retransmission timer
for each of these packets based on when

10
00:00:42,731 --> 00:00:46,072
they were sent.
And, essentially maintaining conservative

11
00:00:46,072 --> 00:00:50,750
estimate of, if we haven't received and
acknowledgement for the packet by this

12
00:00:50,750 --> 00:00:55,488
time, then this means that it is almost
certain that the packet was lost and so we

13
00:00:55,488 --> 00:00:58,040
should transmit it.
And so the question is,

14
00:00:58,040 --> 00:01:02,200
Given this set of parameters which are generally used
 for reliable transport, how is the

15
00:01:05,072 --> 00:01:07,944
protocol going to behave?
What it is its restransmisson strategy

16
00:01:07,944 --> 00:01:08,748
going to look like? So you see that
there's essentially two strategies you end

17
00:01:08,748 --> 00:01:12,368
up seeing, you end up, so set up emerging from
different protocols.

18
00:01:12,368 --> 00:01:16,123
The first thing we go-back-n.
The way to think is go-back-n as a

19
00:01:16,123 --> 00:01:21,827
very pessimistic approach or pessimistic
behavior, which is that if a single packet

20
00:01:21,827 --> 00:01:27,119
is lost, then we are going to retransmit the
entire outstanding window of packets.

21
00:01:27,119 --> 00:01:30,968
Go-back-n, so with a  window size of N we
lose a packet.

22
00:01:30,968 --> 00:01:35,778
Some packet, we're going back N
transmission so we transmit all of them.

23
00:01:35,778 --> 00:01:40,040
The second is selective repeat, the way to
think of it is optimistic.

24
00:01:40,040 --> 00:01:45,324
So, go-back-n assumes that if one
packet is lost, all of them are lost in

25
00:01:45,324 --> 00:01:48,669
the window.
So, selective repeat, assumes that if one

26
00:01:48,669 --> 00:01:53,686
packet is lost, only that packet is lost.
So with selective repeat, if we lose a

27
00:01:53,686 --> 00:01:58,502
packet, it's not acknowledged.
We'll retransmit that packet and only that

28
00:01:58,502 --> 00:02:01,512
packet.
So, lets look at what go-back-n

29
00:02:01,512 --> 00:02:04,589
appears like, what's the behavior that you
see?

30
00:02:04,589 --> 00:02:08,736
So, let's say that we have a window of
size equal to four.

31
00:02:08,735 --> 00:02:13,620
And so the sender sends packet one, two,
three, four and packet two is lost.

32
00:02:14,860 --> 00:02:19,273
So here are our four transmissions.
Well, in response to packet one, the

33
00:02:19,273 --> 00:02:23,240
receiver is going to send acknowledgement,
acknowledgement one.

34
00:02:24,740 --> 00:02:28,203
But it's not going to send acknowledgement
two.

35
00:02:28,206 --> 00:02:34,180
And so what will happen at some point
we're going to have retransmit timer go

36
00:02:34,180 --> 00:02:39,990
off and then in the go back n protocol,
what the sender is going to do is it's

37
00:02:39,990 --> 00:02:44,586
going to re-transmit the entire
outstanding window into some kind of

38
00:02:44,586 --> 00:02:48,012
timing.
And so don't forget, and window is going

39
00:02:48,012 --> 00:02:52,750
to include five because in response to
this act one, it can send five.

40
00:02:52,750 --> 00:02:58,581
And so the transmitter seeing the packet
two was lost, it's going to assume that

41
00:02:58,581 --> 00:03:02,882
the entire window is lost and retransmit
the entire window.

42
00:03:02,882 --> 00:03:06,600
So, it's very conservative very, or very
pessimistic.

43
00:03:06,600 --> 00:03:10,900
So, now let's see what a selective repeat
protocol will do.

44
00:03:10,900 --> 00:03:17,473
So again, N = four,
We transmit one, two, three, four.

45
00:03:17,473 --> 00:03:22,540
One, two, three, four.
Packet two is lost.

46
00:03:22,860 --> 00:03:26,876
Packet one is acknowledged, which lets us
send five.

47
00:03:26,880 --> 00:03:34,571
And the selective repeat protocol, the
transmitter is going to retransmit two and

48
00:03:34,571 --> 00:03:40,710
then we'll continue execution and transmit
six, seven, eight, nine ....

49
00:03:40,731 --> 00:03:46,313
So, retransmit only the packets that were
not acknowledged.

50
00:03:46,313 --> 00:03:53,916
So one question that comes up, is why
given that selective repeat doesn't,

51
00:03:53,916 --> 00:03:59,016
sends fewer, why would you ever want to do
go back n?

52
00:03:59,016 --> 00:04:05,106
Well, there are a couple of reasons.
One is that selective repeat, if actually

53
00:04:05,106 --> 00:04:09,264
all of those packets were lost, if packet
two, three, four, Are they packets two,

54
00:04:09,264 --> 00:04:12,396
three, four, five were all lost,
In order to do each of this

55
00:04:12,396 --> 00:04:16,230
retransmissions involves timers and
round-trip times, so it can be much

56
00:04:16,230 --> 00:04:18,714
slower.
If there's a burst of losses, a selective

57
00:04:18,714 --> 00:04:21,144
repeat protocol off and be slower to
recover.

58
00:04:21,144 --> 00:04:25,194
It's supposed to go back in, which assume
that all the packets are lost and

59
00:04:25,194 --> 00:04:28,110
retransmits all of them and it can't get
going faster.

60
00:04:28,110 --> 00:04:33,049
And so as the trade-off here between sort
of the amount of data that you send, how

61
00:04:33,049 --> 00:04:38,170
quickly you send it and then how much if
it's wasted versus the speed of recovery

62
00:04:38,170 --> 00:04:42,267
from significant errors.
So let's walk through two example transport

63
00:04:42,267 --> 00:04:46,544
protocols and their configuration and see
how they behave, what happens.

64
00:04:46,544 --> 00:04:51,183
So, in this first one, our sender has a
window of size N and let's say that N=4

65
00:04:51,183 --> 00:04:55,761
just like the prior examples.
And the receiver has a window of size one

66
00:04:55,761 --> 00:05:01,345
so the receive window size is one.
So based on this, is the protocol going to

67
00:05:01,345 --> 00:05:10,100
behave just go back N or selective repeat?
Well, so let's walk through what happens.

68
00:05:10,620 --> 00:05:14,640
So the sender, let's say is going to send
one, two, three, four.

69
00:05:16,860 --> 00:05:23,007
One, two, three, four.
And let's say that packet two is lost so

70
00:05:23,007 --> 00:05:27,144
it doesn't arrive.
Well, the receiver is going to acknowledge

71
00:05:27,144 --> 00:05:33,860
one.
Which we'll allow the center to send five.

72
00:05:34,400 --> 00:05:38,791
But the receiver is not going to
acknowledge two.

73
00:05:38,791 --> 00:05:45,961
Now at some point, 2's retransmission
timer is going to fire and I'll retransmit two

74
00:05:45,961 --> 00:05:53,949
But the thing is, that because the
receiver has a receive window size of only

75
00:05:53,949 --> 00:05:58,979
one, it has been unable to buffer packets
three, four and five.

76
00:05:58,979 --> 00:06:03,680
And so when it receives packet two, it's
going to ACK two.

77
00:06:05,160 --> 00:06:08,948
The sender has not received the
acknowledgment for three.

78
00:06:08,948 --> 00:06:16,121
It's going to have to retransmit three.
And then the receiver can acknowledge

79
00:06:16,121 --> 00:06:20,313
three.
At some point, the sender can then start

80
00:06:20,313 --> 00:06:25,425
using it for a window again with the point
being that since this first two was lost,

81
00:06:25,425 --> 00:06:27,920
three, four, and five couldn't be
buffered.

82
00:06:27,920 --> 00:06:32,606
The fact that receiver has a window size
of only one, it's going to force the

83
00:06:32,606 --> 00:06:35,953
sender to retransmit every single packet
in the window.

84
00:06:35,953 --> 00:06:39,240
So we're going to see that this behaves as
go-back-n.

85
00:06:39,240 --> 00:06:43,390
So let's see a second example.
So in this case the sender has a window

86
00:06:43,390 --> 00:06:48,261
size of n and the receiver has a window
size of n and let's say that for both of

87
00:06:48,261 --> 00:06:51,690
them just again for simplicity sake this
is of size four.

88
00:06:51,690 --> 00:06:55,660
So, in this case for the protocol be 
go-back-n or selective repeat.

89
00:06:58,100 --> 00:07:04,580
And so, let's walk through what happens.
We have again one, two, three, four.

90
00:07:04,580 --> 00:07:13,816
Two is lost so I get an acknowledgement for
two, for one, ACK one results in packet

91
00:07:13,816 --> 00:07:18,592
five being sent.
Then at some point two's transmission timer

92
00:07:18,592 --> 00:07:23,862
fires so, I resend two.
Now the receiver has been able to buffer

93
00:07:23,862 --> 00:07:30,202
these packets because there is a window of
size n so it had three packets buffer.

94
00:07:30,202 --> 00:07:35,719
It can then, so here it's buffer. It had
packets three, four, and five.

95
00:07:35,719 --> 00:07:39,556
Packet two arrives.
It can then acknowledge five.

96
00:07:39,556 --> 00:07:44,243
So it might be that the sender was a
little aggressive, maybe it did retransmit

97
00:07:44,243 --> 00:07:48,277
three or four or something, but the point
is that it doesn't have to.

98
00:07:48,277 --> 00:07:53,201
For this to operate correctly is say just
waited for the, those transmission timers

99
00:07:53,201 --> 00:07:58,184
or did slowly transmissions, etcetera that
the sender is going to resend only packet

100
00:07:58,184 --> 00:08:00,854
two.
Only the outstanding packet that was not

101
00:08:00,854 --> 00:08:05,481
acknowledged, the rest of the buffered,
receiver, and so we see this behaves as

102
00:08:05,481 --> 00:08:09,170
selective-repeat.
So, when you're implementing transmit

103
00:08:09,170 --> 00:08:13,594
protocols, say if you're take, if you're
doing, you're doing lab two.

104
00:08:13,594 --> 00:08:18,688
But, the only thing you want to think
about is how you handle retransmission.

105
00:08:18,688 --> 00:08:23,854
So one of the really important things is
that you don't retransmit earlier than you

106
00:08:23,854 --> 00:08:27,911
should by which I mean it's not okay to
say start a retransmit term based on

107
00:08:27,911 --> 00:08:32,179
packet one or packet two and then when two
has retransmit timer fires, retransmit

108
00:08:32,179 --> 00:08:35,129
entire window.
Because it could very would be that three,

109
00:08:35,129 --> 00:08:39,028
four, and five have been correctly
received or assuming as it happened but

110
00:08:39,028 --> 00:08:42,822
you're going to retransmit them anyway.
You're very aggressively putting

111
00:08:42,822 --> 00:08:47,037
additional packets in the network here.
Inflating the number of packets that are

112
00:08:47,037 --> 00:08:50,304
beyond your window size.
Three, four, and five could still be in

113
00:08:50,304 --> 00:08:53,360
the network here.
You're putting additional copies of them.

114
00:08:53,360 --> 00:08:59,580
So, in that way, you want to be careful
about the number of packets you put in

115
00:08:59,580 --> 00:09:02,332
there. You have to be careful about
retransmission policy.

116
00:09:02,332 --> 00:09:06,358
As we'll see, which you can see is that,
on one hand you can assume trying to be

117
00:09:06,358 --> 00:09:09,110
very conservative.
And look, if one packet was lost, I'm

118
00:09:09,110 --> 00:09:13,086
going to assume that the others are lost
and then I'm going to retransmit the

119
00:09:13,086 --> 00:09:17,495
entire window with the go back N policy.
Now what will happen if say, your receiver

120
00:09:17,495 --> 00:09:21,941
has a window size of only one or you can
maybe be a little bit slower and say look,

121
00:09:21,941 --> 00:09:24,994
one pack was lost.
I'm going to wait for one trip time and

122
00:09:24,994 --> 00:09:28,315
transmit with that.
See if I can get acknowledge and see where

123
00:09:28,315 --> 00:09:32,547
the acknowledgement puts me and then
perhaps just do a selective repeat and

124
00:09:32,547 --> 00:09:35,440
transmit only the packet that needs to be
transmitted.

