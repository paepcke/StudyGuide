1
00:00:00,729 --> 00:00:06,710
In this video we’ll look at common attacks
that can be performed locally by compromising

2
00:00:06,710 --> 00:00:09,440
Layer 2 networks.

3
00:00:09,440 --> 00:00:14,459
Eavesdropping is quite easy if we put our
network interface into promiscuous mode. In

4
00:00:14,459 --> 00:00:18,199
promiscuous mode, your network interface will
capture all of the packets passing by, not

5
00:00:18,199 --> 00:00:23,169
just those addressed to your Ethernet address.
Computers allow this mode of operation so

6
00:00:23,169 --> 00:00:27,349
they can act as an Ethernet switch – for
example, the Linux operating system comes

7
00:00:27,349 --> 00:00:32,758
with Ethernet switching code built in. When
wireshark runs it first puts your interface

8
00:00:32,759 --> 00:00:36,710
into promiscuous mode so it can see all the
packets.

9
00:00:36,710 --> 00:00:40,699
This is particularly easy in a WiFi network
and early Ethernet networks where packets

10
00:00:40,699 --> 00:00:42,899
were broadcast onto a single shared link.

11
00:00:42,899 --> 00:00:47,719
It doesn’t work so well with modern Ethernet
networks that use EThernet switches, because

12
00:00:47,719 --> 00:00:52,100
packets are usually private to the links between
the source and the destination.

13
00:00:52,100 --> 00:00:57,739
In this video I’ll show you how we can force
packets to be broadcast in any Ethernet network

14
00:00:57,739 --> 00:01:02,379
by overflowing the forwarding tables. We do
this by prventing the switch from learning

15
00:01:02,379 --> 00:01:07,690
addresses correctly. Once we have forced them
to be broadcast, we can then eavesdrop using

16
00:01:07,690 --> 00:01:10,750
Wireshark.

17
00:01:10,750 --> 00:01:14,750
The next approach is for the attacker to set
up a computer that masquerades as a DHCP or

18
00:01:14,750 --> 00:01:21,750
ARP server, redirecting packets from the sender
via another server.

19
00:01:23,910 --> 00:01:28,570
Eavesdropping is very easy when packets are
broadcast on a shared medium. Just like WiFi

20
00:01:28,570 --> 00:01:34,270
packets are broadcast in the air for everyone
to hear, the earliest versions of Ethernet

21
00:01:34,270 --> 00:01:39,780
broadcast packets on a common cable attached
to all end hosts. Eavesdropping is easy in

22
00:01:39,780 --> 00:01:45,490
a network that shares a single broadcast communication
channel.

23
00:01:45,490 --> 00:01:51,130
But as we saw in Unit 7, Ethernet has changed
over the years. Today, Ethernet networks use

24
00:01:51,130 --> 00:01:56,890
switches rather than a single shared cable.
We use switches because they allow many simultaneous

25
00:01:56,890 --> 00:02:01,750
communications in the network. This is good
news for performance. But it is bad news for

26
00:02:01,750 --> 00:02:08,229
the attacker because our packets only pass
over the two links between Alice and Bob.

27
00:02:08,229 --> 00:02:12,200
The Attacker can’t see our packets.

28
00:02:12,200 --> 00:02:17,150
A common exploit is to attack the tables in
the Ethernet switches. As you will recall,

29
00:02:17,150 --> 00:02:22,620
an Ethernet switch learns the addresses of
end hosts by watching packets in the network.

30
00:02:22,620 --> 00:02:27,689
For example, the switch between Alice and
Bob shown here learns their Ethernet addresses

31
00:02:27,689 --> 00:02:32,689
whenever they send packets. Here is what the
forwarding table might look like in the switch

32
00:02:32,689 --> 00:02:37,579
after it has learned some addresses. In practice
the tables are much bigger than this – usually

33
00:02:37,579 --> 00:02:43,769
tens or hundreds of thousands of entries – but
I show only a few here to keep things simple.

34
00:02:43,769 --> 00:02:47,349
Remember that if a switch receives a packet
with an Ethernet destination address that

35
00:02:47,349 --> 00:02:54,349
is not in its forwarding table, then it broadcasts
the packets. So how can the Attacker persaude

36
00:02:55,379 --> 00:03:01,599
the switch to broadcast packets? It can keep
filling up the forwarding table with other

37
00:03:01,599 --> 00:03:08,599
addresses. So, what an attacker can do is
keep sending – at very high rate – packets

38
00:03:10,150 --> 00:03:15,510
with new Ethernet addresses. The switches
will learn these addresses, displacing entries

39
00:03:15,510 --> 00:03:22,249
already in the switches. Typically, the replacement
policy is least recently used, so if the Attacker

40
00:03:22,249 --> 00:03:26,859
sends at a high enough rate, the table will
keep evicting the entries for Alice and Bob.

41
00:03:26,859 --> 00:03:33,010
All the packets will be broadcast, and will
be seen by the Attacker.

42
00:03:33,010 --> 00:03:40,010
This is called a MAC Overflow attack.

43
00:03:44,709 --> 00:03:48,999
Another common type of attack is to set up
a rogue DHCP server.

44
00:03:48,999 --> 00:03:55,950
In this attack, The Attacker is going to try
and persuade you to use a rogue DHCP server.

45
00:03:55,950 --> 00:04:00,249
Recall that DHCP is a service offered by a
network to help configure your computer when

46
00:04:00,249 --> 00:04:05,719
it boots or first attaches to the network.
Your computer sends out a sequence of broadcast

47
00:04:05,719 --> 00:04:12,719
discovery packets to find the DHCP server,
which is usually hosted on the nearest router.

48
00:04:13,099 --> 00:04:17,250
After your computer has found the DHCP server,
it sends a request, asking to be allocated

49
00:04:17,250 --> 00:04:21,250
an IP address on the local network, along
with the address of the default router and

50
00:04:21,250 --> 00:04:26,560
the addresses of the DNS servers it should
use.

51
00:04:26,560 --> 00:04:31,890
If the Rogue DHCP server can respond faster
than the legitimate server, it can respond

52
00:04:31,890 --> 00:04:38,260
to Alice first, giving her whatever configuration
information it wants. For example, the Attacker

53
00:04:38,260 --> 00:04:43,570
can give Alice a bad router address, so she
sends traffic to the Attacker instead of the

54
00:04:43,570 --> 00:04:48,730
router. This makes it easy for the Attacker
to set up a man in the middle attack without

55
00:04:48,730 --> 00:04:53,950
Alice knowing.
A second way is for the Attacker to give Alice

56
00:04:53,950 --> 00:05:00,250
the IP address of a remote rogue DNS server.
When Alice looks up IP addresses in future

57
00:05:00,250 --> 00:05:06,560
– for example, next time she visits google.com
– the rogue DNS server can return the IP

58
00:05:06,560 --> 00:05:13,560
address of a different server, and intercept
Alice’s traffic.

59
00:05:14,810 --> 00:05:21,810
Finally, the Attacker can set up a rogue ARP
server. When Alice is sending packets to a

60
00:05:23,320 --> 00:05:28,170
local host, or via the router, she will first
send an ARP request to find out the Ethernet

61
00:05:28,170 --> 00:05:35,170
address of the next hop. First she sends a
broadcast ARP request packet to the ARP server,

62
00:05:35,470 --> 00:05:40,370
which replies with the legitimate Ethernet
address she is looking for.

63
00:05:40,370 --> 00:05:44,990
But if the Attacker sets up a Rogue ARP server
that responds faster than the legitimate ARP

64
00:05:44,990 --> 00:05:50,410
server, the Attacker can give Alice the wrong
information. If the Attacker replies with

65
00:05:50,410 --> 00:05:54,950
the Ethernet address of a rogue server in
the local network, then all of Alice’s traffic

66
00:05:54,950 --> 00:05:59,380
will be sent to the rogue server. This is
an easy way to setup a man in the middle attack,

67
00:05:59,380 --> 00:06:03,470
by passing all of Alice’s traffic through
a rogue server without Alice knowing.

