1
00:00:01,006 --> 00:00:05,032
In this video, I'm going to tell you about
what packet switching is and why

2
00:00:05,032 --> 00:00:09,091
packet switching is used in the internet.
Packet switching was first described by

3
00:00:09,092 --> 00:00:14,000
Paul Barren in the early 1960s.
It describes the way in which packets of

4
00:00:14,001 --> 00:00:18,055
information are routed one-by-one across
the internet to their destination, just

5
00:00:18,055 --> 00:00:21,017
like letters are delivered by the post
office.

6
00:00:21,017 --> 00:00:25,077
Packet-switching is really important for
us to understand, because when we choose

7
00:00:25,077 --> 00:00:29,098
to use packet-switching, it dictates many
of the properties of the network.

8
00:00:30,051 --> 00:00:36,055
Today I'm going to describe what packet
switching is, and why it was chosen for

9
00:00:36,055 --> 00:00:38,031
the internet.
But first.

10
00:00:38,031 --> 00:00:43,037
To set some set some context, I'm gonna
tell you about a predecessor of packet

11
00:00:43,037 --> 00:00:46,031
switching that was called circuit
switching.

12
00:00:46,031 --> 00:00:51,037
And we're all very familiar with circuit
switching, cause it's what's used in the

13
00:00:51,037 --> 00:00:54,081
telephone network.
So the most common use of circuit

14
00:00:54,081 --> 00:00:59,018
switching is in the telephone, the
traditional wired telephone network.

15
00:00:59,018 --> 00:01:04,043
And we're gonna walk through what happens
when we place a phone call from the phone

16
00:01:04,043 --> 00:01:09,021
on the left to the one on the right.
Now with the picture I've got here it

17
00:01:09,021 --> 00:01:14,080
shows the telephones being connected by a
dedicated wire and that wouldn't make for

18
00:01:14,080 --> 00:01:19,065
a very interesting telephone system we can
only talk to one other person.

19
00:01:19,065 --> 00:01:25,037
But so in practice the telephones are
connected together through a through a

20
00:01:25,037 --> 00:01:29,003
dedicated wire down to a switching,
switching center.

21
00:01:29,003 --> 00:01:34,007
So in the early days of telephony back in
the 1880s or so, the dedicated wire went

22
00:01:34,007 --> 00:01:38,076
to a switch-board operator and the
switch-board operator was a room full of

23
00:01:38,076 --> 00:01:43,044
people who would take a dedicated wire
from the input and connect it to the

24
00:01:43,044 --> 00:01:46,082
dedicated wire to the phone that you are
connecting to.

25
00:01:46,082 --> 00:01:52,041
So it was all manually connected and well
the main point here is the wire is

26
00:01:52,041 --> 00:01:58,006
dedicated for the phone conversation from
the start to the end of the phone call.

27
00:02:00,546 --> 00:02:03,086
Nowadays of course we don't have a room full of
switch, switchboard operators and these

28
00:02:03,086 --> 00:02:09,065
instead we use automatic circuit switches that
set up the circuit for us from one phone

29
00:02:09,065 --> 00:02:15,009
to our friend's phone at the other end.
So it helps to think of a phone call

30
00:02:15,009 --> 00:02:19,052
having three phases.
First we pick up the handset and dial the

31
00:02:19,052 --> 00:02:24,096
number and dialing the number is saying
where do we want to be connected to.

32
00:02:24,096 --> 00:02:29,003
This creates a dedicated circuit from one
end to the other.

33
00:02:29,059 --> 00:02:34,217
So that dedicated circuit is gonna go
through all of the circuits along the way.

34
00:02:34,217 --> 00:02:38,254
And the system has told each of the
circuits to connect an incoming wire to an

35
00:02:38,254 --> 00:02:41,556
outcoming wire.
Or an incoming circuit to an outcoming

36
00:02:41,556 --> 00:02:45,512
circuit.
So each switch is going to maintain the

37
00:02:45,512 --> 00:02:50,656
state to map the incoming circuit to the
correct outgoing circuit.

38
00:02:50,656 --> 00:02:56,520
And then in the second phase we talk.
In a digital phone system like most phone

39
00:02:56,520 --> 00:03:02,524
systems are today our voice is sampled and
digitized at the first switch.

40
00:03:02,524 --> 00:03:08,548
Then it's sent over a dedicated circuit as
a typically 64 kilobit channel for voice.

41
00:03:08,548 --> 00:03:13,584
So our phone conversation has a dedicated
circuit or channel all the way along the

42
00:03:13,584 --> 00:03:16,814
path and the circuit is not shared with
anyone else.

43
00:03:16,814 --> 00:03:21,734
And then finally when we hang up, the
circuit has to be removed and any state in

44
00:03:21,734 --> 00:03:25,618
the switches along the path has to be
removed, as well.

45
00:03:25,618 --> 00:03:32,188
So in practice, between the switches the
there are trunk lines which are really,

46
00:03:32,188 --> 00:03:35,754
really fast.
In other words, they have a very high data

47
00:03:35,754 --> 00:03:38,775
rate.
Even the slow ones run at two and a half

48
00:03:38,775 --> 00:03:42,973
gigabits per second.
And the fastest ones today run at 40 or

49
00:03:42,973 --> 00:03:48,002
even 100 gigabits per second.
Sometimes you'll hear people call these

50
00:03:48,002 --> 00:03:52,937
big trunk lines big fat pipes because of
the volume of data they can send.

51
00:03:52,937 --> 00:03:57,562
But actually these big fat pipes are
really tiny, skinny, little optical

52
00:03:57,562 --> 00:04:00,247
fibers.
Thinner than one of your hairs.

53
00:04:00,247 --> 00:04:05,614
Many thousands of phone calls can share
that same trunk line between cities.

54
00:04:05,614 --> 00:04:11,248
Each in its own dedicated circuit.
The key thing here to remember is every

55
00:04:11,248 --> 00:04:15,145
phone call has its own dedicated
64-kilobit per second circuit.

56
00:04:15,145 --> 00:04:18,542
That it doesn't have to share with anybody
else.

57
00:04:18,541 --> 00:04:24,094
So, in summary we can think of circuit
switching as having the following

58
00:04:24,094 --> 00:04:27,773
characteristics.
Each call has its own private guaranteed

59
00:04:27,773 --> 00:04:33,084
isolated data rate from end to end.
Second, the call has three phases,

60
00:04:33,084 --> 00:04:38,365
establish, communicate and close.
And third, originally a circuit was an end

61
00:04:38,365 --> 00:04:43,076
to end physical wire.
But now a days it's made up of a virtual

62
00:04:43,076 --> 00:04:47,116
private wire.
It's gonna share that wire with others but

63
00:04:47,116 --> 00:04:50,676
it has it's own dedicated circuit within
that wire.

64
00:04:50,676 --> 00:04:53,635
There are a few problems with circuit
switching.

65
00:04:53,635 --> 00:04:56,553
Clearly it's worked very well for the phone
system.

66
00:04:56,553 --> 00:05:01,591
But when we're thinking about using
circuit switching for the Internet or any

67
00:05:01,591 --> 00:05:06,440
computer communications, there are a few
shortcomings that we that we need to

68
00:05:06,440 --> 00:05:09,423
consider.
So we're gonna go through three main

69
00:05:09,423 --> 00:05:12,889
problems.
The first one is it's inefficient.

70
00:05:12,889 --> 00:05:18,158
Computers when computers communicate, they
tend to be very bursty.

71
00:05:18,158 --> 00:05:24,640
We tend to send data in bursts of may be a
few seconds, a few packets, maybe even a

72
00:05:24,640 --> 00:05:29,264
few minutes, depending on the application
that we're running.

73
00:05:29,264 --> 00:05:32,892
For example, if I'm typing over an SSH
connection then.

74
00:05:32,892 --> 00:05:36,553
I'm gonna have characters, that I'm gonna
send every now and again.

75
00:05:36,553 --> 00:05:41,567
Sometimes a flurry of characters as I type
a word and then long periods of silence in

76
00:05:41,567 --> 00:05:43,780
between.
Or if I am reading a sequence of web

77
00:05:43,780 --> 00:05:46,291
pages.
I might have a burst as I fill up one

78
00:05:46,291 --> 00:05:50,618
page, a burst as I fill up the figures to
populate that page, and then a period of

79
00:05:50,618 --> 00:05:54,072
pause while I read those web pages.
So it tends to be very bursty.

80
00:05:54,072 --> 00:06:00,064
Because during those times of, of silence,
when I am not doing anything, there is no

81
00:06:00,064 --> 00:06:05,031
activity, I've got this dedicated circuit
which nobody else can use.

82
00:06:05,031 --> 00:06:10,019
So it is very inefficient, very
inefficient use of the capacity of the

83
00:06:10,019 --> 00:06:15,055
network as a whole.
The second thing is computers tend to have

84
00:06:15,055 --> 00:06:19,087
very diverse applications that need very
different rates.

85
00:06:19,087 --> 00:06:23,030
Communicators communicate at many, many
different rates.

86
00:06:23,030 --> 00:06:28,041
So a web server might be streaming video
at, say one, five or even six megabits per

87
00:06:28,041 --> 00:06:31,052
second.
But if you compare that with me typing one

88
00:06:31,052 --> 00:06:36,045
character every second, there's a huge
difference in the rates that the network

89
00:06:36,045 --> 00:06:40,019
needs to support.
So if we pick a fixed rate circuit for the

90
00:06:40,019 --> 00:06:43,074
video, and then I use if or typing, it
will be barely used.

91
00:06:43,074 --> 00:06:47,066
Or vice versa then I wouldn't even be able
to stream the video.

92
00:06:47,066 --> 00:06:50,097
So a fixed rate circuit really isn't much
use at all.

93
00:06:52,001 --> 00:06:56,035
The third one, the third problem with
circuit switching is all of the state that

94
00:06:56,035 --> 00:06:59,065
we need to maintain.
We need to maintain some state for every

95
00:06:59,065 --> 00:07:03,039
phone call that's going on.
Every time we establish a call, we need to

96
00:07:03,039 --> 00:07:07,040
set up the circuit mapping from the
ingress to the egress of every switch

97
00:07:07,040 --> 00:07:10,033
along the way.
If a circuit fails, or a switch fails, or

98
00:07:10,033 --> 00:07:14,083
a link fails, we need to go in and change
all of that state in order to reroute the,

99
00:07:14,083 --> 00:07:17,093
reroute the calls.
So, we have to manage it, and at the end

100
00:07:17,093 --> 00:07:22,038
we need to remember to take the state out.
If anything fails, then we may find that

101
00:07:22,038 --> 00:07:25,053
the state becomes inconsistent, and then
we have a problem.

102
00:07:25,053 --> 00:07:29,017
So, state management in circuit switches
is, is considered a problem.

103
00:07:29,017 --> 00:07:33,046
And if we had thousands or hundreds of
thousands of communications going on at

104
00:07:33,046 --> 00:07:36,072
the same time, that's just a lot of work
that has to be done.

105
00:07:37,083 --> 00:07:43,086
So let's take a look at packet switching
in contrast to circuit switching.

106
00:07:45,031 --> 00:07:49,388
So again, we're gonna look at two end
systems communicating and this in this

107
00:07:49,388 --> 00:07:54,700
case we're gonna look at this laptop on
the left, A, and it's going to be talking

108
00:07:54,700 --> 00:08:00,015
to the server on the right, B.
In practice these of course can be

109
00:08:00,015 --> 00:08:05,049
anywhere, anywhere in the internet.
In packet switching there's no dedicated

110
00:08:05,049 --> 00:08:10,014
circuit to carry our data.
Instead we just send when we are ready at

111
00:08:10,014 --> 00:08:15,089
any time we want we send a block of data
by adding a header to it that's what we

112
00:08:15,089 --> 00:08:19,080
call a packet.
A header contains the address of where the

113
00:08:19,080 --> 00:08:25,013
packet is going just like an envelope
tells the post office where to send the

114
00:08:25,013 --> 00:08:31,055
letter.
Packet switched network consists of end

115
00:08:31,055 --> 00:08:38,039
host, the links, and packet switches.
When we send the packet, it's routed one

116
00:08:38,039 --> 00:08:43,069
hope at a time from the source, in this
case that laptop, A, all the way through

117
00:08:43,068 --> 00:08:47,097
to the destination B.
If you look at the packet it has the data

118
00:08:47,097 --> 00:08:51,098
in it, and it also has the address, B of
where it's going to.

119
00:08:51,098 --> 00:08:57,055
We'll see later that packets are a little
bit more complicated than this, but this

120
00:08:57,055 --> 00:09:02,072
is the bare information, the minimum
information that it needs, the data that

121
00:09:02,072 --> 00:09:07,021
we want to get to B, and then the address,
B, of where it's going to.

122
00:09:09,013 --> 00:09:14,065
So when we send the packet it's gonna be
routed hop-by-hop from the source to the

123
00:09:14,065 --> 00:09:18,028
destination.
Each packet switch along the way is gonna

124
00:09:18,028 --> 00:09:23,080
look up the address in a forwarding table.
So it keeps a local forwarding table at

125
00:09:23,080 --> 00:09:28,038
all of the packet switches.
And here I've got a forwarding table

126
00:09:28,092 --> 00:09:34,077
saying if we see the adress B.
Then we're gonna send it to, on the next

127
00:09:34,077 --> 00:09:38,061
top, to S2.
And this is S2 over here.

128
00:09:38,061 --> 00:09:43,031
Okay, so once this switch S1 sees this
packet, it's gonna look it up in it's

129
00:09:43,031 --> 00:09:47,088
table and send it along to switch S2, and
this is it going along its way.

130
00:09:47,088 --> 00:09:52,096
Switch S2 will have it's own table and a
course that table is gonna be different

131
00:09:52,096 --> 00:09:57,079
from S1's cause it's gonna have a
different set of next hops for each of the

132
00:09:57,079 --> 00:10:03,062
addresses that it sees, so then it's gonna
send it along it's way this time to S4 and

133
00:10:03,062 --> 00:10:06,032
then eventually to the correct
destination.

134
00:10:09,098 --> 00:10:14,045
So in the inter, internet, there's lots of
different types of packet switch.

135
00:10:14,045 --> 00:10:19,048
Some of them are called routers because
they deal with addresses that are internet

136
00:10:19,048 --> 00:10:24,044
addresses and they may include little
routers that we have in our desks, on our

137
00:10:24,044 --> 00:10:29,016
desks at home or huge routers that are in
big wiring closets in big switching

138
00:10:29,016 --> 00:10:31,022
centers.
But we call those routers.

139
00:10:31,022 --> 00:10:35,070
There're also things called ethernet
switches and we're gonna look at the

140
00:10:35,070 --> 00:10:40,000
difference between different types of
packet switch in a later lecture.

141
00:10:41,066 --> 00:10:47,000
I showed you one packet and of course at
any instance there's gonna be many packets

142
00:10:47,000 --> 00:10:51,000
flowing across the Internet.
Millions and millions of packets flowing

143
00:10:51,000 --> 00:10:55,164
in all sorts of different.
And they're all being routed hop-by-hop,

144
00:10:55,164 --> 00:10:58,483
one at a time by the, by the packet
switches along the path.

145
00:10:58,483 --> 00:11:03,436
So there'll be many flows of communication
going in all sorts of directions at the

146
00:11:03,436 --> 00:11:06,366
same time.
So these packet switches have a lot of

147
00:11:06,366 --> 00:11:09,544
work to do.
And remember they're, they're routing each

148
00:11:09,544 --> 00:11:13,892
packet one at a time by picking the next
hop that it goes to and sending it on its

149
00:11:13,892 --> 00:11:17,504
way.
We gonna take a quick look inside packet

150
00:11:17,504 --> 00:11:20,630
switches and some of their, their relevant
features.

151
00:11:20,630 --> 00:11:25,463
So, I've already told you that packet
switches have a forwarding table to tell it

152
00:11:25,463 --> 00:11:29,028
where the packet goes next.
They also have to have buffers.

153
00:11:29,028 --> 00:11:32,835
So, packet switches have buffers.
Let me to explain why that is.

154
00:11:32,835 --> 00:11:37,619
So, in the middle here we've got a packet
switch, and this packet switch is going to

155
00:11:37,619 --> 00:11:41,165
be receiving these two packets we got
here, and here.

156
00:11:41,165 --> 00:11:46,945
So, we are gonna look what happens if
these packets go through the packet switch.

157
00:11:46,945 --> 00:11:52,321
If they both arrive at the same time And
let's say they are arriving at the full

158
00:11:52,321 --> 00:11:57,193
line rate, of the outgoing link.
Then the packet switch has to hold one of

159
00:11:57,193 --> 00:12:01,817
them While it sends the other, it can't
send them both at the same time so it's

160
00:12:01,817 --> 00:12:05,621
going to send one at a time.
And because it might have many incoming

161
00:12:05,621 --> 00:12:09,665
links, the packet switch has to have a
buffer to hold perhaps, many, many

162
00:12:09,665 --> 00:12:12,579
packets.
And we're gonna see that these packets

163
00:12:12,579 --> 00:12:15,623
these buffers can be quite large in a
practice.

164
00:12:15,623 --> 00:12:20,660
So the buffers hold packets, when two
normal packets arrive at the same time.

165
00:12:20,660 --> 00:12:25,409
And particularly during periods of
congestion, when there are lots and lots

166
00:12:25,409 --> 00:12:29,968
of packets coming in at all of these input
links, all trying to get to the same

167
00:12:29,968 --> 00:12:34,438
output, it may actually have quite big
buffers to hold packets during those times of

168
00:12:34,438 --> 00:12:39,647
congestion.
So in summary, packets are routed

169
00:12:39,647 --> 00:12:45,910
individually by looking up the address in
the router's local forwarding table.

170
00:12:45,910 --> 00:12:49,403
All packets share the full capacity of a
link.

171
00:12:49,403 --> 00:12:55,367
And third, the routers maintain no per
communicate, per communication state.

172
00:12:55,367 --> 00:13:00,624
Now this is really quite key.
In a circuit switch, remember, we need to

173
00:13:00,624 --> 00:13:06,060
maintain state associated with every
circuit along the, every circuit we're

174
00:13:06,060 --> 00:13:09,754
maintaining.
Here we maintain none, we just maintain

175
00:13:09,754 --> 00:13:13,741
the forwarding table.
And then there's is no per communication,

176
00:13:13,741 --> 00:13:18,520
no per packet, or no per flow state
associated with that communication.

177
00:13:18,520 --> 00:13:21,689
So why does the internet use packet
switching?

178
00:13:21,689 --> 00:13:25,990
Probably pretty obvious by now, but I
really wanted to spell that out.

179
00:13:25,990 --> 00:13:29,899
There were three original reasons.
Two of that I've got listed here.

180
00:13:29,899 --> 00:13:32,885
That the, that the internet used packet
switching.

181
00:13:32,885 --> 00:13:38,055
The first two are very, are very obvious,
and come from what I've just what, what

182
00:13:38,055 --> 00:13:41,693
I've just described.
This first one is, packet switching allows

183
00:13:41,693 --> 00:13:45,963
us to use expensive links efficiently.
So, efficient use of expensive links.

184
00:13:45,963 --> 00:13:48,935
Link, Links were assumed to be expensive
and scarce.

185
00:13:48,935 --> 00:13:54,120
The first links that interconnected the
packet switches across the backbone of the

186
00:13:54,120 --> 00:13:56,713
internet were running at a few kilobits
per second.

187
00:13:56,713 --> 00:14:02,173
So they were expensive and everybody knew
that they would become they, they would be

188
00:14:02,173 --> 00:14:06,489
a scarce resort, resource.
Packet switching allows many, many bursty

189
00:14:06,489 --> 00:14:09,906
flows to share that same, those same links
very efficiently.

190
00:14:09,906 --> 00:14:13,099
Because at any one instant, the packet can
use the entire link.

191
00:14:13,099 --> 00:14:17,027
But it can be immediately followed by
another packet using the entire link

192
00:14:17,027 --> 00:14:21,960
belonging to a different communication.
So there's a famous text book by

193
00:14:21,960 --> 00:14:25,562
Bertsekas and Gallager.
Circuit switching is rarely used for data

194
00:14:25,562 --> 00:14:28,996
networks, because of very inefficient use
of the links.

195
00:14:28,996 --> 00:14:34,929
So the second big reason for using packet
switching, was It's widely felt that the

196
00:14:34,929 --> 00:14:40,813
packet switching allows for more resilient
networks, networks that are resilient to

197
00:14:40,813 --> 00:14:46,056
the failure of links and routers.
And the reason for this is, that because

198
00:14:46,056 --> 00:14:51,921
each packet is individually routed along
the path, if something happens, if

199
00:14:51,921 --> 00:14:55,797
something breaks, a link breaks or a
router breaks.

200
00:14:55,797 --> 00:15:00,705
Then we can, because we have no state in
all of the switches for this particular

201
00:15:00,705 --> 00:15:03,142
flow.
We can simply send the packet on a

202
00:15:03,142 --> 00:15:06,555
different path.
We can send it over a different link, to a

203
00:15:06,555 --> 00:15:09,978
different router, and it will find its way
eventually.

204
00:15:09,978 --> 00:15:15,636
So, for this reason, Tanenbaum in
other famous text book, had said, for high

205
00:15:15,636 --> 00:15:19,006
reliability, the internet was to be a
datagram subnet.

206
00:15:19,006 --> 00:15:22,674
So, if some lines of routers were
destroyed, messages could easily be

207
00:15:22,674 --> 00:15:25,403
rerouted.
And, the third big reason, that the

208
00:15:25,403 --> 00:15:30,614
internet use packet switching, was that
the internet was originally designed as an

209
00:15:30,614 --> 00:15:35,616
interconnection of the existing networks.
And, at that time, pretty much all, All

210
00:15:35,616 --> 00:15:39,655
widely used communication networks.
All computer networks were packet

211
00:15:39,655 --> 00:15:41,922
switched.
And so, if the internet was to

212
00:15:41,922 --> 00:15:46,853
interconnect all of those existing
networks, then it too needed to be packet

213
00:15:46,853 --> 00:15:49,958
switched as well.
Okay, this is the end of the first video

214
00:15:49,958 --> 00:15:53,487
about packet switching.
By now you should be able to answer these

215
00:15:53,487 --> 00:15:57,536
three questions very easily.
In the next few videos we're going to

216
00:15:57,536 --> 00:16:01,993
learn more about packet switching, some
basic definitions, some ways to model

217
00:16:01,993 --> 00:16:06,999
packet switching, and some properties of
packet switching that have been developed

218
00:16:06,999 --> 00:16:09,012
over the years.
See you soon.

